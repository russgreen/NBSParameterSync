<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<Configurations>Debug R21;Debug R22;Debug R23;Debug R24;Debug R25</Configurations>
		<Configurations>$(Configurations);Release R21;Release R22;Release R23;Release R24;Release R25</Configurations>
		<Description>Sync NBS Chorus additional parameter values into alternative parameters</Description>
		<Copyright>Copyright © 2024 Russ Green. All rights Reserved</Copyright>
		<Version>1.1.0</Version>
		<LangVersion>latest</LangVersion>
		<NeutralLanguage>en</NeutralLanguage>
		<Platforms>x64</Platforms>
		<RuntimeIdentifier>win-x64</RuntimeIdentifier>
		<AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
		<AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
		<IncludeSourceRevisionInInformationalVersion>false</IncludeSourceRevisionInInformationalVersion>
		<UseWPF>true</UseWPF>
	</PropertyGroup>

	<PropertyGroup Condition="$(Configuration.Contains('Debug'))">
		<DebugSymbols>true</DebugSymbols>
		<DebugType>full</DebugType>
		<DefineConstants>$(DefineConstants);DEBUG;UseWPF</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Condition="$(Configuration.Contains('Release'))">
		<Optimize>true</Optimize>
		<DebugType>none</DebugType>
		<DefineConstants>$(DefineConstants);RELEASE</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="$(Configuration.Contains('R21'))">
		<TargetFramework>net48</TargetFramework>
		<RevitVersion>2021</RevitVersion>
		<DefineConstants>$(DefineConstants);REVIT2021;PREFORGETYPEID</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Condition="$(Configuration.Contains('R22'))">
		<TargetFramework>net48</TargetFramework>
		<RevitVersion>2022</RevitVersion>
		<DefineConstants>$(DefineConstants);REVIT2022</DefineConstants>
		<DefineConstants>$(DefineConstants);REVIT2022_OR_GREATER</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Condition="$(Configuration.Contains('R23'))">
		<TargetFramework>net48</TargetFramework>		
		<RevitVersion>2023</RevitVersion>
		<DefineConstants>$(DefineConstants);REVIT2023</DefineConstants>
		<DefineConstants>$(DefineConstants);REVIT2022_OR_GREATER;REVIT2023_OR_GREATER</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Condition="$(Configuration.Contains('R24'))">
		<TargetFramework>net48</TargetFramework>		
		<RevitVersion>2024</RevitVersion>
		<DefineConstants>$(DefineConstants);REVIT2024</DefineConstants>
		<DefineConstants>$(DefineConstants);REVIT2022_OR_GREATER;REVIT2023_OR_GREATER;REVIT2024_OR_GREATER</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Condition="$(Configuration.Contains('R25'))">
		<TargetFramework>net8.0-windows</TargetFramework>
		<RevitVersion>2025</RevitVersion>
		<DefineConstants>$(DefineConstants);REVIT2025</DefineConstants>
		<DefineConstants>$(DefineConstants);REVIT2022_OR_GREATER;REVIT2023_OR_GREATER;REVIT2024_OR_GREATER;REVIT2025_OR_GREATER</DefineConstants>
	</PropertyGroup>
	
	<PropertyGroup>
		<!-- Define handy symbols to use in the code in order to accommodate different Revit versions,
        e.g. by wrapping legacy / deprecated API calls with #if REVIT2014 | REVIT2015 -->
		<PreprocessorDefinitions>$(DefineConstants)</PreprocessorDefinitions>

		<!-- Multiple targets can cause obj folder locking by concurrent builds -->
		<BuildInParallel>false</BuildInParallel>

		<!-- Override 'OutputPath'  -->
		<AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
		<!-- <OutputPath>bin\$(Configuration)</OutputPath> -->
		<AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>

		<!-- Copy dependacies to output folder on build -->
		<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
	</PropertyGroup>
	
	<ItemGroup>
	  <None Remove="Resources\Hyperlink.png" />
	  <None Remove="Resources\SyncData.png" />
	</ItemGroup>
	
	<ItemGroup>
		<!--<PackageReference Include="Microsoft.Xaml.Behaviors.Wpf" Version="1.1.39" />-->
		<PackageReference Include="CommunityToolkit.Mvvm" Version="8.*" />		
		<PackageReference Include="Microsoft.Extensions.Hosting" Version="7.0.0" />
		<PackageReference Include="Serilog.Extensions.Hosting" Version="7.0.0" />
		<PackageReference Include="Serilog.Sinks.Debug" Version="2.0.0" />
		<PackageReference Include="Serilog.Sinks.File" Version="5.0.0" />
		<PackageReference Include="Nice3point.Revit.Api.RevitAPI" Version="$(RevitVersion).*-*" />
		<PackageReference Include="Nice3point.Revit.Api.RevitAPIUI" Version="$(RevitVersion).*-*" />
		<PackageReference Include="Nice3point.Revit.Extensions" Version="$(RevitVersion).*" />
		<PackageReference Include="Nice3point.Revit.Toolkit" Version="$(RevitVersion).*" />
		<PackageReference Include="ricaun.Revit.UI.StatusBar" Version="1.0.0" />
		<PackageReference Include="Syncfusion.SfGrid.WPF" Version="24.2.7" />
	</ItemGroup>


	<ItemGroup>
		<EmbeddedResource Include="Resources\SyncData.png" />
	</ItemGroup>


	<ItemGroup>
	  <Resource Include="Resources\Hyperlink.png" />
	</ItemGroup>

	<ItemGroup>
		<None Update="SyncNBSParameters.addin">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="Resources\SharedParameters.txt">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
	</ItemGroup>

	<Target Name="PreBuild" BeforeTargets="PreBuildEvent">
		<Exec Command="cd &quot;$(SolutionDir)&quot;&#xD;&#xA;SyncfusionLicenseRegister.bat PreBuild $(ProjectDir)App.cs $(SolutionDir)SyncfusionKey.txt" />
	</Target>

	<Target Name="PostBuild" AfterTargets="PostBuildEvent">
		<Exec Command="cd &quot;$(SolutionDir)&quot;&#xD;&#xA;SyncfusionLicenseRegister.bat PostBuild $(ProjectDir)App.cs $(SolutionDir)SyncfusionKey.txt" />
	</Target>

	<!-- Build debug manifest at build time -->
	<Target Name="CreateAddinManifest" AfterTargets="AfterBuild">
		<ItemGroup>
			<AddinManifest Include="$(AppData)\Autodesk\REVIT\Addins\$(RevitVersion)\SyncNBSParameters.addin" />
		</ItemGroup>
		<ReplaceFileText InputFilename="SyncNBSParameters.addin" OutputFilename="@(AddinManifest)" MatchExpression="Assembly&gt;(.*?)&lt;" ReplacementText="Assembly&gt;$(TargetDir)$(AssemblyName).dll&lt;" />
		<ReplaceFileText InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="&lt;VendorId&gt;(.*?)&lt;" ReplacementText="&lt;VendorId&gt;$(PackageId)&lt;" />
		<ReplaceFileText InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="&lt;FullClassName&gt;(.*?)&lt;" ReplacementText="&lt;FullClassName&gt;$(RootNamespace).App&lt;" />
	</Target>
	
	<!-- Clean up debug manifest -->
	<Target Name="CleanupAddinManifest" AfterTargets="AfterClean">
		<Delete Files="$(AppData)\Autodesk\REVIT\Addins\$(RevitVersion)\SyncNBSParameters.addin" />
	</Target>

	<UsingTask Condition="'$(MSBuildRuntimeType)' == 'Full'" TaskName="ReplaceFileText" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
		<ParameterGroup>
			<InputFilename ParameterType="System.String" Required="true" />
			<OutputFilename ParameterType="System.String" Required="true" />
			<MatchExpression ParameterType="System.String" Required="true" />
			<ReplacementText ParameterType="System.String" Required="true" />
		</ParameterGroup>
		<Task>
			<Reference Include="System.Core" />
			<Using Namespace="System" />
			<Using Namespace="System.IO" />
			<Using Namespace="System.Text.RegularExpressions" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
              File.WriteAllText(OutputFilename,Regex.Replace(File.ReadAllText(InputFilename),MatchExpression,ReplacementText));
        ]]>
			</Code>
		</Task>
	</UsingTask>

	<UsingTask Condition="'$(MSBuildRuntimeType)' == 'Core'" TaskName="ReplaceFileText" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<InputFilename ParameterType="System.String" Required="true" />
			<OutputFilename ParameterType="System.String" Required="true" />
			<MatchExpression ParameterType="System.String" Required="true" />
			<ReplacementText ParameterType="System.String" Required="true" />
		</ParameterGroup>
		<Task>
			<Using Namespace="System" />
			<Using Namespace="System.IO" />
			<Using Namespace="System.Text.RegularExpressions" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
              File.WriteAllText(OutputFilename,Regex.Replace(File.ReadAllText(InputFilename),MatchExpression,ReplacementText));
        ]]>
			</Code>
		</Task>
	</UsingTask>



</Project>
